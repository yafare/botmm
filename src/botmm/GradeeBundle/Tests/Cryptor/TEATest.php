<?php


namespace Cryptor;


use botmm\GradeeBundle\Oicq\Cypher\Cryptor;
use botmm\GradeeBundle\Oicq\Tools\Hex;
use botmm\GradeeBundle\Tests\Tlv\TlvTestCase;

class TEATest extends TlvTestCase
{

    public function testDec001()
    {
        $data = "
 c5 a6 c1 d3
00 cb d7 d3 e1 51 a0 af cb 5f b6 f6 d3 1c 78 90
d4 b1 a6 63 2d eb 7b ff 3f 1d ba d9 d4 9d 9e 53
e2 d5 2f ea 57 8c 44 34 6b 38 45 a8 73 15 ca 43
72 26 56 9a 1e 43 1d db 67 0e 3c 21 ef fc 6a ed
ac ed 6c ef d5 b9 fe a5 63 24 0f 71 49 c2 49 41
1a d9 12 40 54 f9 af f7 f4 92 36 f3 f4 4a cb f1
19 03 91 67 76 bf 0f 72 14 84 b3 08 bf d5 e0 df
cc e3 c5 2c 41 aa e7 6f 2e 4b 16 eb 

";
        $key = '00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00';
        $key  = '7d1ffc96239d17a236f122d2b497a300';//sharekey
        //$key = '74ccb6a8c92f95de435fa9c329f2c816';//md5_2+uin 123456789
        $key = md5(md5('thirstyzebra', true).hex2bin('00000000002bc065'));//md5_2+uin 12345678
        //print $key;
        //$key = md5(md5('123456', true).hex2bin('00000000002bc065'));//md5_2+uin 12345678
        //$key = 'cf 2c 33 2a 1b af 36 d0 34 9f ab 27 ac 0b 29 2c';//tmp 009 tgtgt
        //$key  = '66 6f 55 bc 4d 6b 3a 34 6c f4 b0 b1 b4 b9 6c a9';
        //$key = '67 24 2e 42 35 55 74 55 44 62 67 73 3c 38 66 58';
        //$key = '3f 25 4b 0e 79 39 59 32 55 30 9b 31 d0 ba d5 82';//101 randkey
        //$key = '40 6a 6b 21 7d 45 62 3f 27 4d 75 2d 68 57 2e 45';//101 sessionkey
        $key = '04 cd 89 2d e0 90 bc e1 5c d3 a6 55 36 70 a6 b6';

        $str    = Hex::HexStringToBin($data);
        $result = Cryptor::decrypt($str, 0, strlen($str), Hex::HexStringToBin($key));


        $this->assertBinEqualsHex("0c", $result, "should equal");
    }

    public function testGzinflate()
    {
        //$source   = Hex::HexStringToBin
        //$composed = gzcompress($source, -1, ZLIB_ENCODING_DEFLATE);
        //$composed2 = gzencode($source, -1, FORCE_DEFLATE);
        //$this->assertEquals($composed, $composed2);
        //print_r(Hex::BinToHexString($composed));
        //$uncomposed = gzuncompress($composed);
        //print_r(Hex::BinToHexString($uncomposed));

        $str = Hex::HexStringToBin("
                                    cd bf 52 07 dd 94 e3
2f 4f 26 f7 f7 8a b0 7c  9e d3 f5 5e a6 17 e4 15
b5 6a 93 28 bd c8 8f 89  b7 6f c0 1d db 17 0f 7c
fa 6d 05 2f 47 df f8 12  23 60 81 ab 73 10 13 2e
b4 7e 74 d4 72 bf 52 ec  64 84 8b 93 ec 1a 02 28
2b c4 21 4c 2c 79 f9 d9  f6 1a 08 b0 40 83 67 56
38 9b 9a b7 77 9f 97 2b  6f 85 56 19 c9 8c f9 5c
13 5c 03 db 35 aa ce 10  34 04 e7 21 40 2b 21 85
09 85 3d 16 41 38 ee 08  82 a6 5d 50 47 10 b7 cd
b8 46 45 ff 53 44 6a 1e  b1 ef b0 dd 4d d2 2a c3
09 37 fe b9 60 55 d0 fc  4a f5 87 1e 9e d7 8c 27
5b d1 9d b5 3b 35 07 e8  06 04 a6 76 3e 11 64 88
e1 66 12 4d 68 3a 47 fc  ba ed 5e 88 64 c3 68 7a
f1 5d 54 50 a5 85 ff 42  fe c1 65 55 2b c0 6e 4c
87 d1 98 8c f5 da f5 6a  66 78 56 28 92 76 11 e8
e2 3d e5 a9 47 59 48 f3  91                     
        ");

        //$bin = gzinflate($str);
        //
        $bin = gzuncompress($str);
        print_r($bin) ;
        print  "\n";
        print_r(Hex::BinToHexString($bin));

    }
}